name: Homarr

on:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - '**homarr.yml'
      - '**.hurl'

env:
  PROJECT_URL: https://github.com/soubinan/homelab-lxc
  PROJECT_SOURCE: https://github.com/ajnart/homarr
  AUTHOR: https://github.com/soubinan
  APP_NAME: homarr

jobs:
  build:
    strategy:
      matrix:
        distribution:
          - debian
        architecture:
          - amd64
        release:
          - bookworm
    runs-on: ubuntu-latest

    steps:
      - name: Install Distrobuilder and other tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y debootstrap squashfs-tools jq wget curl unzip
          sudo snap install distrobuilder --classic
          mkdir -p /tmp/output/$APP_NAME
          mkdir -p /tmp/cache/$APP_NAME
          wget $(curl -s https://api.github.com/repos/Orange-OpenSource/hurl/releases/latest |jq -r '.assets[] | select(.name|test("amd64.deb")) | .browser_download_url') -O /tmp/hurl_amd64.deb
          sudo apt-get install -y /tmp/hurl_amd64.deb
          sudo -v ; curl https://rclone.org/install.sh | sudo bash

          cat <<EOF > /tmp/rclone.conf
          $RCLONE_CONFIG
          EOF
        env:
          RCLONE_CONFIG: ${{secrets.RCLONE_CONFIG}}

      - name: Get application version
        run: |
          echo "APP_VERSION=$(curl -s https://raw.githubusercontent.com/ajnart/homarr/master/package.json | jq -r '.version')" >> $GITHUB_ENV

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build Image
        if: github.event_name == 'pull_request'
        run: |
          sudo distrobuilder --cache-dir /tmp/cache/$APP_NAME build-lxc ${{github.workspace}}/templates/${APP_NAME}.yml -o image.distribution=${{matrix.distribution}} -o image.architecture=${{matrix.architecture}} -o image.release=${{matrix.release}} -o image.serial="v${APP_VERSION}" -o source.url="http://ftp.us.debian.org/debian" /tmp/output/$APP_NAME/
          mv /tmp/output/$APP_NAME/rootfs.tar.xz ./$APP_NAME-$APP_VERSION.tar.xz
          mv /tmp/output/$APP_NAME/meta.tar.xz ./$APP_NAME-$APP_VERSION-meta.tar.xz
          echo "ARTIFACT_SIZE=$(du -sh ./$APP_NAME-$APP_VERSION.tar.xz| cut -f 1)" >> $GITHUB_ENV
          pwd && ls -lash

      - name: Publish Image files
        run: |
          rclone copy ./$APP_NAME-$APP_VERSION.tar.xz cloudflare:lxc-images --config /tmp/rclone.conf
          rclone copy ./$APP_NAME-$APP_VERSION-meta.tar.xz cloudflare:lxc-images --config /tmp/rclone.conf
          echo
          echo 'LXC Image published successfully !'
        env:
          RCLONE_CONFIG_PASS: ${{secrets.RCLONE_CONFIG_PASS}}

      - name: Publish build info
        run: |
          hurl --variable endpoint_url=$HOMELAB_LXC_EP --variable token=$HOMELAB_LXC_TOKEN \
            --variable app_name=$APP_NAME --variable app_version=$APP_VERSION \
            --variable arch=${{matrix.architecture}} --variable dist=${{matrix.distribution}} \
            --variable dist_release=${{matrix.release}} --variable build_id=${{env.APP_NAME}}-${{env.APP_VERSION}}.tar.xz\
            --variable size=$ARTIFACT_SIZE --variable source=$PROJECT_SOURCE\
            .github/publish_build.hurl
          echo
          echo 'LXC build published successfully !'
        env:
          HOMELAB_LXC_EP: ${{secrets.HOMELAB_LXC_EP}}
          HOMELAB_LXC_TOKEN: ${{secrets.HOMELAB_LXC_TOKEN}}
