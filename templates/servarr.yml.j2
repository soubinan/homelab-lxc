{%
  set arrs = {
    'radarr': 'http://radarr.servarr.com/v1/update/nightly/updatefile?os=linux&runtime=netcore&arch=${ARCH}',
    'readarr': 'http://readarr.servarr.com/v1/update/nightly/updatefile?os=linux&runtime=netcore&arch=${ARCH}',
    'lidarr': 'http://lidarr.servarr.com/v1/update/nightly/updatefile?os=linux&runtime=netcore&arch=${ARCH}',
    'sonarr': 'https://services.sonarr.tv/v1/download/main/latest?version=4&os=linux&arch=x64',
    'whisparr': 'http://whisparr.servarr.com/v1/update/nightly/updatefile?os=linux&runtime=netcore&arch=${ARCH}',
    'prowlarr': 'http://prowlarr.servarr.com/v1/update/nightly/updatefile?os=linux&runtime=netcore&arch=${ARCH}',
  }
%}
{% extends "./__debian_base.yaml.j2" %}
{# *** Enter your configuration bellow *** #}
{% block dumps %}
{% for arr in arrs %}
- path: /etc/systemd/system/{{ arr }}.service
  generator: dump
  mode: 0440
  content: |-
    [Unit]
    Description={{ arr | capitalize }} Daemon
    After=syslog.target network.target
    [Service]
    User={{ arr }}
    Group=media
    Type=simple

    ExecStart=/opt/{{ arr | capitalize }}/{{ arr | capitalize }} -nobrowser -data=/var/lib/{{ arr }}/
    TimeoutStopSec=20
    KillMode=process
    Restart=on-failure
    [Install]
    WantedBy=multi-user.target
{% endfor %}
- path: /etc/systemd/system/flaresolverr.service
  generator: dump
  mode: 0440
  content: |-
    [Unit]
    Description=FlareSolverr Daemon
    After=syslog.target network.target
    [Service]
    User=flaresolverr
    Group=media
    Type=simple

    ExecStart=/opt/FlareSolverr/venv/bin/python -u /opt/FlareSolverr/src/flaresolverr.py
    TimeoutStopSec=20
    KillMode=process
    Restart=on-failure
    [Install]
    WantedBy=multi-user.target

- path: /etc/systemd/system/bazarr.service
  generator: dump
  mode: 0440
  content: |-
    [Unit]
    Description=Bazarr Daemon
    After=syslog.target network.target
    [Service]
    User=bazarr
    Group=media
    Type=simple

    ExecStart=/opt/bazarr/venv/bin/python -u /opt/bazarr/bazarr.py
    TimeoutStopSec=20
    KillMode=process
    Restart=on-failure
    [Install]
    WantedBy=multi-user.target

- path: /etc/systemd/system/qbittorrent.service
  generator: dump
  mode: 0440
  content: |-
    [Unit]
    Description=QBitTorrent Daemon
    After=syslog.target network.target
    [Service]
    User=qbittorrent
    Group=media
    Type=simple

    ExecStart=/usr/bin/qbittorrent-nox --daemon --first-and-last --skip-dialog=true
    TimeoutStopSec=20
    KillMode=process
    Restart=on-failure
    [Install]
    WantedBy=multi-user.target
{% endblock dumps %}
{# Set packages to be installed #}
{% block packages %}
  - packages:
    - software-properties-common
    - git
    - sqlite3
    - python3-pip
    - python3-venv
    - python3-distutils
    - python3-dev
    - equivs
    - 7zip
    - unrar-free
    - unzip
    - qbittorrent-nox
    action: install
{% endblock packages %}
{# Set required repositories for packages to be installed #}
{% block repositories %}{% endblock repositories %}
{# Scripts to be excuted after packages installation and all files has been copied #}
{% block post_files %}
- trigger: post-files
  pongo: true
  action: |-
    #!/bin/bash
    set -eux
{% raw %}
    export ARCH={{ image.architecture }}
    if [[ "$ARCH" == "amd64" ]];then export ARCH="x64"; fi
{% endraw %}
    mkdir /downloads
    groupadd media
    chown -R :media /downloads

    cd /opt
{% for arr, url in arrs.items() %}
    useradd {{ arr }}
    usermod -aG media {{ arr }}
    mkdir -p /var/lib/{{ arr }}
    chown {{ arr }}:{{ arr }} -R /var/lib/{{ arr }}
    wget --content-disposition "{{ url }}" -O {{ arr | capitalize }}.linux.tar.gz
    tar -xvzf {{ arr | capitalize }}*.linux*.tar.gz
    chown {{ arr }}:{{ arr }} -R /opt/{{ arr | capitalize }}
    systemctl enable {{ arr }}.service
{% endfor %}
    rm -rf *.tar.gz

    mkdir -p /tmp/{libgl1-mesa-dri,adwaita-icon-theme} /pkgs 
    cd /tmp/libgl1-mesa-dri
    equivs-control libgl1-mesa-dri
    printf 'Section: misc\nPriority: optional\nStandards-Version: 3.9.2\nPackage: libgl1-mesa-dri\nVersion: 99.0.0\nDescription: Dummy package for libgl1-mesa-dri\n' >> libgl1-mesa-dri
    equivs-build libgl1-mesa-dri
    mv libgl1-mesa-dri_*.deb /pkgs/libgl1-mesa-dri.deb
    cd /tmp/adwaita-icon-theme
    equivs-control adwaita-icon-theme
    printf 'Section: misc\nPriority: optional\nStandards-Version: 3.9.2\nPackage: adwaita-icon-theme\nVersion: 99.0.0\nDescription: Dummy package for adwaita-icon-theme\n' >> adwaita-icon-theme
    equivs-build adwaita-icon-theme
    mv adwaita-icon-theme_*.deb /pkgs/adwaita-icon-theme.deb
    dpkg -i /pkgs/libgl1-mesa-dri.deb
    dpkg -i /pkgs/adwaita-icon-theme.deb
    apt install -y --no-install-recommends chromium chromium-common chromium-driver xvfb dumb-init procps curl vim xauth
    useradd --home-dir /opt/FlareSolverr --shell /bin/sh flaresolverr
    usermod -aG media flaresolverr
    git clone -b master --depth 1 https://github.com/FlareSolverr/FlareSolverr.git /opt/FlareSolverr
    cd /opt/FlareSolverr
    python3 -m venv venv
    /opt/FlareSolverr/venv/bin/python -m pip install -r requirements.txt
    mv /usr/bin/chromedriver /opt/FlareSolverr/chromedriver
    mkdir -p "/opt/FlareSolverr/.config/chromium/Crash Reports/pending"
    chown -R flaresolverr:flaresolverr /opt/FlareSolverr
    systemctl enable flaresolverr.service
    rm -f /usr/lib/x86_64-linux-gnu/libmfxhw*
    rm -f /usr/lib/x86_64-linux-gnu/mfx/*
    rm -rf /pkgs

    mkdir /opt/bazarr
    useradd --home-dir /opt/bazarr --shell /bin/sh bazarr
    usermod -aG media bazarr
    wget https://github.com/morpheus65535/bazarr/releases/latest/download/bazarr.zip -O /opt/bazarr.zip
    unzip /opt/bazarr.zip -d /opt/bazarr
    cd /opt/bazarr
    python3 -m venv venv
    /opt/bazarr/venv/bin/python -m pip install -r requirements.txt
    chown -R bazarr:bazarr /opt/bazarr
    systemctl enable bazarr.service
    rm -rf /opt/*.zip

    mkdir /opt/qbittorrent
    useradd --home-dir /opt/qbittorrent qbittorrent
    usermod -aG media qbittorrent
    systemctl enable qbittorrent.service
{% endblock post_files %}
{# *** End of configuration block *** #}