metadata:
  name: Zitadel
  get_version_command: curl -s https://api.github.com/repos/zitadel/zitadel/releases/latest | jq -r '.tag_name'
  description: Zitadel is a free and open-source secure authentication management tool.
  categories: Identity, IAM, IDP, Security
  project_source: https://github.com/zitadel/zitadel
  distribution: debian
  release: bookworm
  architectures:
    - amd64
  help_message: |
    Required configurations updates:

    Update the ExternalDomain (and ExternalPort if needed) in /opt/zitadel/.config to match externally used one.
instructions:
  files:
    - path: /opt/certs/ca.cnf
      generator: copy
      source: assets/certificates/ca.cnf

    - path: /opt/certs/server.cnf
      generator: copy
      source: assets/certificates/server.cnf

    - path: /opt/zitadel/.config
      generator: dump
      content: |-
        ExternalDomain: localhost
        ExternalSecure: true
        TLS:
          Enabled: true
          KeyPath: /opt/certs/server.key
          CertPath: /opt/certs/zitadel.crt

    - path: /opt/zitadel/.env
      generator: dump
      mode: "0440"
      content: |-
        ZITADEL_DATABASE_POSTGRES_HOST=127.0.0.1
        ZITADEL_DATABASE_POSTGRES_PORT=5432
        ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
        ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel
        ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable
        ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=postgres
        ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable

    - path: /etc/systemd/system/zitadel.service
      generator: dump
      mode: "0440"
      content: |-
        [Unit]
        Description=Zitadel - Secure authentication management
        After=network.target postgresql.service

        [Service]
        Type=simple
        EnvironmentFile=/opt/zitadel/.env
        PIDFile=/opt/zitadel/zitadel.pid
        ExecStart=/usr/local/bin/zitadel start-from-init --masterkeyFromEnv --config /opt/zitadel/.config
        Restart=always

        [Install]
        WantedBy=multi-user.target

  packages:
    - postgresql-15

  actions:
    - trigger: post-files
      pongo: true
      action: |-
        #!/bin/bash
        set -eux

        wget -c https://github.com/zitadel/zitadel/releases/download/v{{image.serial}}/zitadel-linux-{{image.architecture}}.tar.gz -O - | tar -xz && mv zitadel-linux-{{image.architecture}}/zitadel /usr/local/bin

        mkdir -p /opt/zitadel
        echo "ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=$(/usr/bin/openssl rand -hex 16)" >> /opt/zitadel/.env
        echo "ZITADEL_MASTERKEY=$(/usr/bin/openssl rand -hex 16)" >> /opt/zitadel/.env

        PG_VERSION=$(ls -1 /etc/postgresql)

        cat <<EOF > /etc/postgresql/$PG_VERSION/main/pg_hba.conf
        local   all             postgres                                         trust
        host    all             postgres                 127.0.0.1/32            trust
        local   zitadel         zitadel                                          peer
        local   all             all                                              peer
        host    zitadel         zitadel                  127.0.0.1/32            trust
        host    all             all                      127.0.0.1/32            scram-sha-256
        host    all             all                      ::1/128                 scram-sha-256
        local   replication     all                                              peer
        host    replication     all                      127.0.0.1/32            scram-sha-256
        host    replication     all                      ::1/128                 scram-sha-256
        EOF

        touch /opt/certs/index.txt
        echo '01' > /opt/certs/serial.txt
        cd /opt/certs
        openssl req -x509 -config ca.cnf -newkey rsa:4096 -sha256 -nodes -out cacert.pem -outform PEM
        openssl req -config server.cnf -newkey rsa:2048 -sha256 -nodes -out zitadel.csr -outform PEM
        openssl ca -batch -config ca.cnf -policy signing_policy -extensions signing_req -out zitadel.crt -infiles zitadel.csr

        systemctl enable postgresql.service
        systemctl enable zitadel.service
